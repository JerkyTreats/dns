# Build stage
FROM golang:1.24.3-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -o /app/bin/api ./cmd/api

# Final stage
FROM alpine:3.19

# Install runtime dependencies including firewall tools
RUN apk add --no-cache ca-certificates tzdata iptables ipset

# Set working directory
WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/bin/api /app/api

# Create zones directory and set permissions (run as root for volume management)
RUN mkdir -p /etc/coredns/zones /etc/coredns && \
    chmod -R 755 /etc/coredns && \
    chmod +x /app/api

# Set environment variables for better DNS propagation checking in containers
# This helps avoid issues with Docker's internal DNS resolver (127.0.0.11)
ENV DNS_RESOLVERS="8.8.8.8:53,1.1.1.1:53"
ENV LEGO_DISABLE_CNAME_SUPPORT=false
# Additional DNS propagation settings for container environments
ENV LEGO_DNS_TIMEOUT=10s

# Run as root to manage CoreDNS configuration files in production

# Expose port
EXPOSE 8080

# Set environment variables
ENV GIN_MODE=release

# Run the application
CMD ["/app/api"]
