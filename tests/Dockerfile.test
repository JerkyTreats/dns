# Build stage
FROM golang:1.24.3-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates

# Set working directory
WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./

# Download dependencies (this layer will be cached if go.mod/go.sum don't change)
RUN go mod download

# Copy only necessary source code
COPY cmd/ cmd/
COPY internal/ internal/
COPY pkg/ pkg/

# Build the application with minimal flags for faster builds
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags='-w -s' \
    -o /app/bin/api ./cmd/api

# Final stage - minimal runtime image
FROM alpine:3.19

# Install only essential runtime dependencies
RUN apk add --no-cache ca-certificates tzdata netcat-openbsd curl bind-tools

# Create directories (run as root for volume management)
RUN mkdir -p /etc/coredns/zones && chmod -R 755 /etc/coredns

WORKDIR /app

# Copy binary from builder
COPY --from=builder /app/bin/api /app/api

# Make binary executable
RUN chmod +x /app/api

EXPOSE 8080

ENV GIN_MODE=release

# Run as root to manage CoreDNS configuration files
CMD ["/app/api"]
