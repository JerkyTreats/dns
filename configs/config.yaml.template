app:
  name: dns-manager
  version: 1.0.0
  environment: development

server:
  host: 0.0.0.0
  port: SERVER_PORT_PLACEHOLDER
  read_timeout: 5s
  write_timeout: 10s
  idle_timeout: 120s
  tls:
    enabled: false    # Set to true to enable HTTPS on port 443
    port: 443
    cert_file: /etc/letsencrypt/live/INTERNAL_DOMAIN_PLACEHOLDER/cert.pem
    key_file: /etc/letsencrypt/live/INTERNAL_DOMAIN_PLACEHOLDER/privkey.pem
    min_version: "1.2"
    max_version: "1.3"

dns:
  domain: INTERNAL_DOMAIN_PLACEHOLDER    # API will be available at dns.{domain} on ports 80/443
  # Dynamic sync configuration
  internal:
    enabled: true  # Set to false to disable sync
    origin: "INTERNAL_DOMAIN_PLACEHOLDER"
    polling:
      enabled: true
      interval: "1h"
  coredns:
    config_path: /etc/coredns/Corefile
    template_path: /etc/coredns/Corefile.template
    zones_path: /etc/coredns/zones
    # reload_command removed - relying on CoreDNS native reload plugin
    restart_timeout: "30s"  # Timeout for CoreDNS restart operations
    health_check_retries: 5  # Number of retries for health checks after restart
    tls:
      enabled: false
      port: 853
      cert_file: /etc/letsencrypt/live/INTERNAL_DOMAIN_PLACEHOLDER/cert.pem
      key_file: /etc/letsencrypt/live/INTERNAL_DOMAIN_PLACEHOLDER/privkey.pem

# Tailscale integration configuration
tailscale:
  api_key: "TAILSCALE_API_KEY_PLACEHOLDER"
  tailnet: "TAILSCALE_TAILNET_PLACEHOLDER"
  # device_name: "your-device-name"
  # base_url: "https://api.tailscale.com"  # Optional, for custom endpoints

# Device storage configuration
device:
  storage:
    path: "data/devices.json"      # Path to device data file
    backup_count: 3                # Number of backup files to keep

# Proxy configuration
proxy:
  enabled: true                    # Enable reverse proxy functionality
  caddy:
    config_path: /app/configs/Caddyfile
    template_path: /etc/caddy/Caddyfile.template
    port: CADDY_PORT_PLACEHOLDER   # Port for Caddy to listen on

logging:
  level: debug
  format: json
  output: stdout

certificate:
  provider: "lego"                    # Uses Lego for Let's Encrypt certificates
  email: "LETSENCRYPT_EMAIL_PLACEHOLDER"
  domain: "INTERNAL_DOMAIN_PLACEHOLDER"    # Should match dns.domain for automatic HTTPS
  ca_dir_url: "LETSENCRYPT_URL_PLACEHOLDER"
  # Cloudflare API token for DNS-01 challenges (required)
  cloudflare_api_token: "CLOUDFLARE_API_TOKEN_PLACEHOLDER"
  # DNS resolvers for ACME challenge verification (use public DNS servers instead of Docker's internal resolver)
  dns_resolvers:
    - "8.8.8.8:53"
    - "1.1.1.1:53"
  dns_timeout: "10s"
  # Set to true to skip SSL verification for test environments
  insecure_skip_verify: false
  renewal:
    enabled: true
    renew_before: 720h # 30 days
    check_interval: 24h # 24 hours
  monitoring:
    enabled: true
    alert_threshold: "168h" # 7 days
